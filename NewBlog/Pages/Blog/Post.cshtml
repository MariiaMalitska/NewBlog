@page "{id}"
@model NewBlog.Pages.Blog.PostModel

@{
    ViewData["Title"] = "Post";
}

<div style="margin-bottom: 1em">
    <a asp-page="./Index" class="btn btn-success">Back to List</a>
    @if (User.Identity.GetUserId() == Model.Post.UserId.ToString() || User.IsInRole("admin"))
    {
        <a asp-page="./Edit" asp-route-id="@Model.Post.PostId" class="btn btn-warning">Edit</a>
        <a asp-page="./Delete" asp-route-id="@Model.Post.PostId" class="btn btn-danger">Delete</a>
    }
</div>
<div class="card">
    <div class="card-body">
        <h1>@Html.DisplayFor(model => model.Post.PostTitle)</h1>
        <p class="lead">
            By @Html.DisplayFor(model => model.Post.User.Login)
            @if (User.Identity.GetUserId() == Model.Post.UserId.ToString())
            {
                <span> (you)</span>
            }
        </p>
        <hr />
        @if (Model.Post.ImageUrl != null)
        {
            <img class="card-img-top img-fluid" style="object-fit: cover; max-width: 100%; max-height: 15em" src="@Html.DisplayFor(modelItem => Model.Post.ImageUrl)" alt="@Html.DisplayFor(modelItem => Model.Post.PostTitle)">
            <hr />
        }
        <div>
            <p>@Html.Raw(Model.Post.HtmlBody())</p>
        </div>
        <hr />
        <small>Posted at <time>@Model.Post.DatePosted</time></small>
        @if (Model.Post.DateEdited != null)
        {
            <small> | Edited at <time>@Model.Post.DateEdited</time></small>
        }
    </div>
</div>
<hr />
<div class="card">
    <h5 class="card-header">Leave a comment:</h5>
    <div class="card-body">
        <partial name="_CommentFormPartial" model="Model.NewComment" />
    </div>
</div>
@foreach (var comment in Model.Comments)
{
    <div class="card">
        <div class="card-body">
            <div>
                <p class="lead">
                    <b>@Html.DisplayFor(modelItem => comment.User.Login)</b>
                    @if (comment.UserId.ToString() == User.Identity.GetUserId())
                    {
                        <span> (you)</span>
                    }
                </p>
                <p class="card-text">@Html.DisplayFor(modelItem => comment.CommentContent)</p>
                <p class="card-text"><small class="text-muted">Posted at <time>@Html.DisplayFor(modelItem => comment.CommentDate)</time></small></p>
                @if (comment.UserId.ToString() == User.Identity.GetUserId() || User.IsInRole("admin"))
                {
                    <form method="post" onclick="return confirm('Are you sure you want to delete your comment?')">
                        <button class="btn btn-danger" asp-page-handler="deleteComment" asp-route-id="@comment.CommentId">Delete</button>
                    </form>
                }
            </div>
        </div>
    </div>
}
<nav aria-label="Page navigation">
    <ul class="pagination flex-wrap">
        <li class="page-item @(Model.EnablePrevious ? " " : " disabled" )">
            <a asp-route-commentPage="1"
               class="page-link" aria-label="First">
                <span aria-hidden="true">|<</span>
                <span class="sr-only">First</span>
            </a>
        </li>
        <li class="page-item @(Model.EnablePrevious ? " " : " disabled" )">
            <a asp-route-commentPage="@(Model.CurrentPage -1)"
               class="page-link" aria-label="Next">
                <span aria-hidden="true"><</span>
                <span class="sr-only">Next</span>
            </a>
        </li>
        @for (var i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.CurrentPage ? " active" : "" )">
                <a asp-route-commentPage="@i" class="page-link">@i</a>
            </li>
        }
        <li class="page-item @(Model.EnableNext ? " " : " disabled" )">
            <a asp-route-commentPage="@(Model.CurrentPage + 1)"
               class="page-link" aria-label="Previous">
                <span aria-hidden="true">></span>
                <span class="sr-only">Previous</span>
            </a>
        </li>
        <li class="page-item @(Model.EnableNext ? " " : " disabled" )">
            <a asp-route-commentPage="@Model.TotalPages"
               class="page-link" aria-label="Last">
                <span aria-hidden="true">>|</span>
                <span class="sr-only">Last</span>
            </a>
        </li>
    </ul>
</nav>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}